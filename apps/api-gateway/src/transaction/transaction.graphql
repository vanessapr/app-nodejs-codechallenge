scalar Date

enum TransactionStatusEnum {
  pending
  approved
  rejected
}

type Query {
  transaction(id: String!): Transaction
  transactions(first: Int, offset: Int): [Transaction]!
}

type Mutation {
  createTransaction(input: CreateTransactionInput!): CreateTransaction!
}

type TransactionType {
  name: String!
}

type TransactionStatus {
  name: TransactionStatusEnum!
}

type Transaction {
  transactionExternalId: String!
  value: Float!
  transactionType: TransactionType!
  transactionStatus: TransactionStatus!
  createdAt: Date!
}

type CreateTransaction {
  success: Boolean!
  message: String!
  transaction: Transaction
}

input CreateTransactionInput {
  accountExternalIdDebit: String!
  accountExternalIdCredit: String!
  tranferTypeId: Int!
  value: Float!
}
